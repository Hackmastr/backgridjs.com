{{#extend "layout"}}
  {{#content "title"}}Row{{/content}}
  {{#content "content"}}
    <div class="row">
      <div class="col-md-2">
        <h2>
          <a id="row" href="#row" title="Row" class="section">Row</a>
        </h2>
        <ul class="nav nav-stacked">
          <li><a href="http://cloudflare.github.io/backgrid/api/index.html#!/api/Backgrid.Row">Backgrid.Row</a></li>
          <li><a href="http://cloudflare.github.io/backgrid/api/index.html#!/api/Backgrid.EmptyRow">Backgrid.EmptyRow</a></li>
        </ul>
      </div>
      <div class="col-md-10">
        <h3>
          <a id="customizing-row" href="#customizing-row" title="Customizing Row" class="section">Customizing Row</a>
        </h3>
        <p class="label label-warning">Advanced Usage</p>
        <p>A row is simply an intermediary view class that constructs the
          appropriate Cell class instances for rendering the model
          columns.</p>
        <p>If you would like to override how a row is rendered, you may
          define your own Row subclass and give it to the Grid constructor
          as an option:</p>
        <textarea class="code-snippet" data-mode="javascript" data-eval="no">
          // Suppose you want to highlight the entire row when an editable field is focused
          var FocusableRow = Backgrid.Row.extend({
            highlightColor: "lightYellow",
            events: {
              focusin: "rowFocused",
              focusout: "rowLostFocus"
            },
            rowFocused: function() {
              this.el.style.backgroundColor = this.highlightColor;
            },
            rowLostFocus: function() {
              delete this.el.style.backgroundColor;
            }
          });

          var grid = new Backgrid.Grid({
            row: FocusableRow, // <-- Tell the Body class to use FocusableRow to render rows.
            columns: [{
              //...
            }],
            collection: col
          });</textarea>
      </div>
    </div>
  {{/content}}
{{/extend}}
